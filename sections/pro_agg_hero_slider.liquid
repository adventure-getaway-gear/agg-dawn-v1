{{ 'pro_agg_hero_slider.css' | asset_url | stylesheet_tag }}

<div class="pro-hero-slider" 
     data-autoplay="{{ section.settings.autoplay }}" 
     data-interval="{{ section.settings.autoplay_interval }}">
  <div class="slides">
    {% for block in section.blocks %}
      <div id="slide-{{ block.id }}" class="slide" 
           style="background-image: url({{ block.settings.image | img_url: '1600x' }});">
        <div class="slide-content">
          {% if block.settings.heading != blank %}
            <h2 class="slide-heading">{{ block.settings.heading }}</h2>
          {% endif %}
          {% if block.settings.subheading != blank %}
            <p class="slide-subheading">{{ block.settings.subheading }}</p>
          {% endif %}
          {% if block.settings.button_text != blank %}
            <a href="{{ block.settings.button_link }}" class="slide-button">
              {{ block.settings.button_text }}
            </a>
          {% endif %}
        </div>
      </div>
    {% endfor %}
  </div>

  {% if section.blocks.size > 1 %}
    <button class="slider-prev" aria-label="Previous slide">&larr;</button>
    <button class="slider-next" aria-label="Next slide">&rarr;</button>
    <div class="slider-dots">
      {% for block in section.blocks %}
        <button class="dot{% if forloop.first %} active{% endif %}" 
                data-slide="{{ forloop.index0 }}"></button>
      {% endfor %}
    </div>
  {% endif %}
</div>

<script>
  (function(){
    const wrapper = document.querySelector('.pro-hero-slider');
    if (!wrapper) return;
    const track    = wrapper.querySelector('.slides');
    const slides   = wrapper.querySelectorAll('.slide');
    const dots     = wrapper.querySelectorAll('.dot');
    const prevBtn  = wrapper.querySelector('.slider-prev');
    const nextBtn  = wrapper.querySelector('.slider-next');
    let   current  = 0;
    const total    = slides.length;
    const interval = parseInt(wrapper.dataset.interval, 10);
    const autoplay = wrapper.dataset.autoplay === 'true';

    function update() {
      track.style.transform = 	ranslateX(-% );
      dots.forEach((d,i) => d.classList.toggle('active', i === current));
    }

    function goNext(){ current = (current + 1) % total; update(); }
    function goPrev(){ current = (current - 1 + total) % total; update(); }

    nextBtn?.addEventListener('click', goNext);
    prevBtn?.addEventListener('click', goPrev);
    dots.forEach(dot =>
      dot.addEventListener('click', e => {
        current = Number(e.target.dataset.slide);
        update();
      })
    );

    if (autoplay) setInterval(goNext, interval);
  })();
</script>

{% schema %}
{
  "name": "Pro AGG Hero Slider",
  "settings": [
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay slides",
      "default": true
    },
    {
      "type": "number",
      "id": "autoplay_interval",
      "label": "Autoplay interval (ms)",
      "default": 5000
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Background image"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": ""
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading",
          "default": ""
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": ""
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link",
          "default": ""
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Pro AGG Hero Slider",
      "category": "Hero"
    }
  ]
}
{% endschema %}
